#!/bin/zsh

typeset -g -a -H -U zprofile_files zshrc_files \
        zcomp_files zperiodic_files zlogin_files zlogout_files zsystem_done

typeset -g zsystem_current
typeset -g -x -a -U -T ZSYSTEM_ROOTS zsystem_roots
typeset -g -x -a -U -T ZSYSTEM_PATHS zsystem_paths

function _zrunsystem_setup {
  emulate -L zsh
  local droot dir 
  local -a dirs
  
  if [[ $DOTTO_ZSH_RELOAD != 1 && ${#zsystem_roots} -gt 0 ]]; then
    return 0
  fi
  
  local sysuser=${ZSH_PREFS_USER:-$USERNAME}
  zsystem_paths=()
  zsystem_roots=($ZCONFIGDIR)

  for droot in $DOTTODIR/external/*(N); do
    [[ -d $droot/zsh ]] && zsystem_roots+=${droot}/zsh
    [[ -d $droot ]] && zsystem_roots+=${droot}
  done

  dirs+="os/`uname`/zsh"
  [[ -n $domain ]] && dirs+="domains/$domain/zsh"
  dirs+="hosts/`hostname -s`/zsh" 
  dirs+="hosts/`hostname`/zsh"
  dirs+="users/$sysuser/zsh"

  _zsys_add_rooted_dirs zsystem_paths $dirs
}

function _zsys_add_rooted_dirs {
  emulate -L zsh
  local var=$1 dir
  shift

  for dir in $*; do
      for droot in $zsystem_roots; do
          [[ -n "$droot" ]] && droot="${droot%/}/"
          [[ -d "${droot}${dir}" ]] && eval "${var}+='${droot}${dir}'"
      done  
  done
}

function zsyssourcedir {
    local droot dir sysdir syssubdir
    local systemname=$1
    shift

    for dir in "${(@)*}"; do
        # for droot in "${(@)zsystem_roots}"; do
        #     [[ -n "$droot" ]] && droot="${droot%/}/"
        #     zsourcedir -s $systemname "${droot}${dir}"
        # done
        for syssubdir in $dir "${dir}/${systemname}.d"; do
          if [[ -d $syssubdir  ]]; then
            zsourcedir -s $systemname $syssubdir
          fi
        done
    done
}

function zsystem_done {
  emulate -L zsh
  local name=$1
  name=${name%.d}

  [[ -n ${zsystem_done[(r)$name]} ]]
}

function zrunsystem_libs() {
  local systemname=$1
  local arrayname zfile 
  local -a zrlfiles zrlfunctions

  arrayname=${systemname%.d}_files
  zrlfiles=(${(P)arrayname})
  set -A $arrayname

  for zfile in $zrlfiles; do
    source $zfile
  done
  
  arrayname=${systemname%.d}_functions
  zrlfunctions=(${(P)arrayname})
  set -A $arrayname
  
  for zfile in $zrlfunctions; do
    ${=zfile}
  done
}

function zrunsystem() {
  emulate zsh
  local systemname system zfile arrayname
  local domain="$(zdomainname)"
  local zsystem_current=""

  local sysuser=${ZSH_PREFS_USER:-$USERNAME}

  typeset -a -U dirs
  for systemname in "${(@)*}"; do

    dirs=()
    systemname=${systemname%.d}

    zsystem_current=$systemname
    system="${systemname}.d"
    
    [[ -n ${dotto_disabled_systems[(r)$system]} ]] && continue
    [[ -n ${dotto_disabled_systems[(r)$systemname]} ]] && continue

    zctrace "zrunsystem: $systemname"
    
    if ! zsystem_done $systemname; then
      _zsys_add_rooted_dirs dirs "$system"  "$system/`uname`"
      dirs+=($zsystem_paths)
      zsyssourcedir $systemname $dirs      
    fi

    # execute any phased files/functions that have been set
    # since -- this is used by the 'uselib' function
    zrunsystem_libs $systemname

    zsystem_done+=$systemname
  done
}

_zrunsystem_setup
