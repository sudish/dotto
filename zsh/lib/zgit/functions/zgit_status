#!/bin/zsh

#
# The character string printed will contain 0 or more of the
# following characters, indicating (respectively)
#
#   *    unstaged changes
#   +    staged changes
#   ?    untracked files
#   $    stashed changes
#   ^    Local branch ahead of tracking branch by 1 or more commits
#
#
# Returns 0 for clean, 1 for dirty
#

function zgit_status {
    emulate -L zsh
    local gitstatus statstring res=0
    local git_dir
    REPLY=""
    
    if zgit_dir > /dev/null && git_dir=$REPLY; then
        gitstatus=$(git status 2>/dev/null)
        if [[ -z $(ztrim $gitstatus) ]]; then
          zctrace "No output from git status"
          return 1
        fi

        # if it works, git status should tell us this
        if [[ -n ${gitstatus:#*On branch*} ]]; then
          zctrace "No branch listed"
          return 1
        fi

        if [[ -z ${gitstatus:#*Changed but not updated*} ]]; then
           statstring+='*'
        fi

        if [[ -z ${gitstatus:#*Changes to be committed*} ]]; then
           statstring+='+'
        fi
      
        [[ -z ${gitstatus:#*Untracked files*} ]] && statstring+='?'
        
        [[ -f ${git_dir}/refs/stash ]] && statstring+='$'

        if [[ -z ${gitstatus:#*Your branch is ahead of*} ]]; then
          local count=
          count=$(echo "$gitstatus" | sed -n -E -e'/ahead of/ s/^.*by ([0-9]+) commit.*$/\1/ p')
          statstring+=">{$count}"
        fi

        # set return code
        [[ -n ${gitstatus:#*nothing to commit*} ]] && res=1
    else
      REPLY=""
      return 1
    fi

    REPLY=$statstring
    echo -nE $statstring
    return $res
}