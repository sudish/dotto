#!/bin/zsh

function zgit_op () {
    emulate -L zsh
    local op="" git_dir="" branch=""

    if zgit_dir > /dev/null && git_dir=$REPLY; then
        if [[ -d $git_dir/rebase-apply ]]; then
            if [[ -f $git_dir/rebase-apply/rebasing ]]; then
                io="rebase"
            elif [[ -f $git_dir/rebase-apply/applying ]]; then
                op="am"
            else
                op="am/rebase"
            fi
            zgit_branch && branch=$REPLY
        elif [[ -f $git_dir/rebase-merge/interactive ]]; then
            op="rebase -i"
            branch=$(< "$git_dir/rebase-merge/head-name") 2>/dev/null
        elif [[ -d $git_dir/rebase-merge ]]; then
            op="rebase -m"
            branch=$(< "$git_dir/rebase-merge/head-name") 2>/dev/null
        elif [[ -f $git_dir/MERGE_HEAD ]]; then
            op="merge"
            zgit_branch && branch=$REPLY
        elif
            if [[ -f $git_dir/BISECT_LOG ]]; then
    	    op="bisect"
        elif [[ -d "$git_dir/.dotest" ]] ;  then

                if [[ -f "$git_dir/.dotest/rebasing" ]] ;  then
                        op="rebase"

                elif [[ -f "$git_dir/.dotest/applying" ]] ; then
                        op="am"

                else
                        op="am/rebase"

                fi

        elif  [[ -f "$git_dir/.dotest-merge/interactive" ]] ;  then
                op="rebase -i"
                branch=$(< $git_dir/.dotest-merge/head-name) 2>/dev/null

        elif  [[ -d "$git_dir/.dotest-merge" ]] ;  then
                op="rebase -m"
                branch=$(< $git_dir/.dotest-merge/head-name) 2>/dev/null
            
        # lvv: not always works. Should  ./.dotest  be used instead?
        elif  [[ -f "$git_dir/MERGE_HEAD" ]] ;  then
                op="merge"
                zgit_branch > /dev/null && branch=$REPLY
                
        else
                [[  -f "$git_dir/BISECT_LOG"  ]]   &&  op="bisect"
                # ??? branch="$(git symbolic-ref HEAD 2>/dev/null)" || \
                #    branch="$(git describe --exact-match HEAD 2>/dev/null)" || \
                #    branch="$(cut -c1-7 "$git_dir/HEAD")..."
        fi
        
        [ -n "$op" ] && REPLY=$op && echo $op
    fi

    REPLY=$op
    [[ -z "$op" ]] && return 1
    echo $op
}