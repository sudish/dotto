#!/bin/zsh

# Fetches one or more keys from a memcached.
#
# Usage: memcache_misc_command cmd [<arg>...}
#
# <cmd> is one of the non-storage/retrieval commands, such as
#  delete, flush_all, stats, incr, decr, version, quit
#
#

function memcache_misc_command {
  emulate -L zsh
  setopt typeset_silent
  unsetopt multibyte

  local opt="" OPTIND=1 OPTARG="" sfd="" replyvar="" cmd="" islist=0 silent=0 retval=0
  typeset -a args

  while getopts "hv:sl" opt; do
    case "$opt" in
      v) replyvar=$OPTARG ;;
      s) silent=1 ;;
      l) islist=1 ;;
      *) echo -E "unknown option $opt"; return 1;;
    esac
  done

  if [[ $islist == 1 ]]; then
    replyvar=${replyvar:-reply}
    typeset -g -a $replyvar
    set -A $replyvar
  else
    replyvar=${replyvar:-REPLY}
    typeset -g "${replyvar}="
  fi
  
  shift $(( OPTIND - 1 ))
    
  if [[ $#* -lt 1 ]]; then
    echo "Insufficient number of arguments for memcache_misc_command" >&2
    return 1
  fi
  
  cmd=$1
  shift 1
  args=($*)

  local respline="" isdone=0 line="" data="" 

  if ! memcache_connect -o sfd; then
    isdone=1
    retval=3
  else
    line="$cmd ${(j: :)args}"
    memcache_send $sfd $line
    zctrace "sent line $line"
  fi

  local -a resppos

  while [[ $isdone != 1 ]]; do
    read -u $sfd -t 10 REPLY
    zchomp
    data=$REPLY
    set -A resppos ${=data}
    
    if [[ $islist == 1 ]]; then
      [[ $resppos[1] == "END" ]] && break
      eval "${replyvar}+=\$data"
    else
      isdone=1
    fi
  done

  [[ -n $sfd ]] && memcache_disconnect $sfd

  [[ $islist == 0 ]] && eval "$replyvar=\$data"
  zctrace "islist=$islist $replyvar=${(P)replyvar}"

  return $retval
}